{
  "hash": "d1b9706a92e959572010d5c4fbeb685e",
  "result": {
    "markdown": "---\ntitle: \"Youth Mental Health & Social Media\"\nauthor: \"Dean Marchiori\"\nformat: html\n---\n\n\n# Mental Health Conditions by Age & Gender  \n\nSetup and load packages. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(themes360info)  #360Info internal package: `remotes::install_github(\"360-info/themes360info\")` \n```\n:::\n\n\n## Import Data  \n\nDownload and unzip data. For more information see `data/README.md`.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nif (!file.exists(\"data/ABS_Aus_2021.zip\")) {\n\n    download.file(\"https://www.abs.gov.au/census/find-census-data/datapacks/download/2021_GCP_AUS_for_AUS_short-header.zip\",\n        destfile = \"data/ABS_Aus_2021.zip\"\n    )\n\n    unzip(\"data/ABS_Aus_2021.zip\", exdir = \"data/ABS_Aus_2021\")\n}\n```\n:::\n\n\nRead in the relevant table from the ABS GCP datasets. Table 19 in the GCP is around long term health conditions. \nIt is split across three csv files (A, B, C).  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nmh19a <- read_csv(\"data/ABS_Aus_2021/2021 Census GCP Australia for AUS/2021Census_G19A_AUS_AUS.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 1 Columns: 201\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (1): AUS_CODE_2021\ndbl (200): M_Arthritis_0_14, M_Arthritis_15_24, M_Arthritis_25_34, M_Arthrit...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nmh19b <- read_csv(\"data/ABS_Aus_2021/2021 Census GCP Australia for AUS/2021Census_G19B_AUS_AUS.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 1 Columns: 201\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (1): AUS_CODE_2021\ndbl (200): F_Kidney_disease_0_14, F_Kidney_disease_15_24, F_Kidney_disease_2...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nmh19c <- read_csv(\"data/ABS_Aus_2021/2021 Census GCP Australia for AUS/2021Census_G19C_AUS_AUS.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 1 Columns: 21\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (1): AUS_CODE_2021\ndbl (20): P_NS_0_14, P_NS_15_24, P_NS_25_34, P_NS_35_44, P_NS_45_54, P_NS_55...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n\n## Data Processing  \n\nExtracting Male and Female Mental Health data, and population totals.  \n\nPivoting wider and separating out the ABS column names to decompose gender and age .  \n\nI have calculated *_directional columns to allow plotting like a symmetric age pyramid.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# This is a helper function for the symmetric bar plot\npretty_symmetric <- function(range, n = 5) {\n    range_1 <- c(-range[1], range[2])\n    range_2 <- c(range[1], -range[2])\n\n    pretty_vec_1 <- pretty(range_1)\n    pretty_vec_2 <- pretty(range_2)\n\n    pretty(\n        c(pretty_vec_1, pretty_vec_2),\n        n = n\n    )\n}\n\n# data processing pipeline\nmh <- bind_cols(mh19a, mh19b, mh19c) |>\n    select(\n        AUS_CODE_2021 = AUS_CODE_2021...1,\n        contains(c(\"M_Mental\", \"F_Mental\", \"M_Tot\", \"F_Tot\")),\n        -M_Mental_health_cond_Tot,\n        -F_Mental_health_cond_Tot,\n        -F_Tot_Tot,\n        -M_Tot_Tot\n    ) |>\n    pivot_longer(-AUS_CODE_2021,\n        names_to = \"cat\"\n    ) |>\n    separate_wider_regex(cat,\n        patterns = c(gender = \".\", cond = \"_.+\", age = \"(?<=_)[0-9]+_.+$\"),\n        too_few = \"align_start\"\n    ) |>\n    pivot_wider(names_from = cond) |>\n    rename(\n        condition = `_Mental_health_cond_`,\n        total = `_Tot_`\n    ) |>\n    mutate(\n        age = str_replace(age, \"_\", \"-\"),\n        gender = fct_recode(gender, Female = \"F\", Male = \"M\"),\n        alpha_channel = ifelse(age %in% c(\"15-24\", \"0-14\", \"25-34\"), 0.8, 0.6)\n    ) |>\n    mutate(\n        age = fct_rev(age),\n        condition_directional = ifelse(gender == \"Male\", condition * -1, condition),\n        proportion = condition / total,\n        proportion_directional = ifelse(gender == \"Male\", proportion * -1, proportion)\n    )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\n• `AUS_CODE_2021` -> `AUS_CODE_2021...1`\n• `AUS_CODE_2021` -> `AUS_CODE_2021...202`\n• `AUS_CODE_2021` -> `AUS_CODE_2021...403`\n```\n:::\n:::\n\n\n\n## Plot  \n\nShowing symmetric age pyramid, split by gender for Mental Health prevalance. \n\nThis version shows **count of persons**  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nabs_plot_1 <- ggplot(mh, aes(condition_directional, age, fill = gender)) +\n    geom_col(aes(alpha = alpha_channel)) +\n    scale_x_continuous(\n        breaks = pretty_symmetric(range(mh$condition_directional)),\n        labels = scales::comma(abs(pretty_symmetric(range(mh$condition_directional))))\n    ) +\n    expand_limits(x = pretty_symmetric(range(mh$condition_directional))) +\n    scale_fill_manual(values = c(\"#36a7e9\", \"#2d3494\"))+\n    scale_alpha(range = c(0.6, 1)) +\n    guides(alpha = \"none\") +\n    themes360info::theme_360() +\n    labs(\n        title = \"Persons with a mental health condition\",\n        subtitle = \"Has been told by a doctor or nurse that they have a **mental health condition**<br>*(including depression or anxiety)*\",\n        caption = \"**Source**: Based on Australian Bureau of Statistics data.\",\n        x = \"Count of Persons\",\n        y = \"Age\",\n        fill = \"Gender\"\n    ) +\n    annotate_360_lightblue(\n        x = 210000, y = 9.1, size = 3, \n        label = \"**Young people** make up a<br> large proprtion of overall sufferers<br> of mental health conditions.<br> **Females** are much more heavily impacted.\"\n    ) \n\nsave_360plot(abs_plot_1, \"out/abs_plot_1.png\", shape = \"square\")\n\nabs_plot_1\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nShowing symmetric age pyramid, split by gender for Mental Health prevalance. \n\nThis version shows **Proportion of persons**  \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nabs_plot_2 <- ggplot(mh, aes(proportion_directional, age, fill = gender)) +\n    geom_col(aes(alpha = alpha_channel)) +\n    scale_x_continuous(\n        breaks = pretty_symmetric(range(mh$proportion_directional)),\n        labels = scales::percent(abs(pretty_symmetric(range(mh$proportion_directional))))\n    ) +\n    expand_limits(x = pretty_symmetric(range(mh$proportion_directional))) +\n    scale_fill_manual(values = c(\"#36a7e9\", \"#2d3494\"))+\n    scale_alpha(range = c(0.6, 1)) +\n    guides(alpha = \"none\") +\n    themes360info::theme_360() +\n    labs(\n        title = \"Proportion of persons in each age group\\nwith a mental health condition\",\n        subtitle = \"Has been told by a doctor or nurse that they have a **mental health condition**<br>*(including depression or anxiety)*\",\n        caption = \"**Source**: Based on Australian Bureau of Statistics data.\",\n        x = \"Proportion of persons in each age group\",\n        y = \"Age\",\n        fill = \"Gender\"\n    ) +\n    annotate_360_lightblue(\n        x = -0.1, y = 9.1, size = 3, \n        label = \"A high proportion of persons in **Youth** age <br>groups suffer from mental health conditions.<br> **Females** are much more heavily impacted.\"\n    ) \n\nsave_360plot(abs_plot_2, \"out/abs_plot_2.png\", shape = \"square\")\n\nabs_plot_2\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n# Mental Health Map  \n\nLoading required packages \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(sf)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLinking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE\n```\n:::\n\n```{.r .cell-code}\nlibrary(mapview)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nThe legacy packages maptools, rgdal, and rgeos, underpinning the sp package,\nwhich was just loaded, will retire in October 2023.\nPlease refer to R-spatial evolution reports for details, especially\nhttps://r-spatial.org/r/2023/05/15/evolution4.html.\nIt may be desirable to make the sf package available;\npackage maintainers should consider adding sf to Suggests:.\nThe sp package is now running under evolution status 2\n     (status 2 uses the sf package in place of rgdal)\n```\n:::\n\n```{.r .cell-code}\nlibrary(sfdep)\nlibrary(patchwork)\n```\n:::\n\n\n# Data Import \n\nDownload Australia level Geopackage from ABS. For more info see `data/README.md`\n\nNote: This will check if the file exists before downloading as its ~2.1GB zipped.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nif (!file.exists(\"data/ABS_Geo_2021.zip\")) {\n\n    download.file(\"https://www.abs.gov.au/census/find-census-data/geopackages/download/Geopackage_2021_G19_AUST_GDA2020.zip\",\n        destfile = \"data/ABS_Geo_2021.zip\", method = \"curl\"\n    )\n\n    unzip(\"data/ABS_Geo_2021.zip\", exdir = \"data/ABS_Geo_2021\")\n}\n```\n:::\n\n\nThe health tables are covered in table 19 of the geopackage. This is split across three files, A, B & C.\nWe only need files B and C for this analysis.  Combining together.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Extracting SA2 layers \nmh2 <- sf::read_sf(\"data/ABS_Geo_2021/G19B_AUST_GDA2020.gpkg\", layer = \"G19B_SA2_2021_AUST\")\nmh3 <- sf::read_sf(\"data/ABS_Geo_2021/G19C_AUST_GDA2020.gpkg\", layer = \"G19C_SA2_2021_AUST\")\nmh_all <- cbind(mh2, mh3)\n```\n:::\n\n\n## Data Processing \n\nSelecting only the 15-24 year age group, and selecting Persons (not Male/Female).  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nmh_dat <- mh_all |>\n    st_drop_geometry() |>\n    as_tibble()  |>\n    select(\n        SA2_CODE_2021,\n        contains(c(\"P_Mental\", \"P_Tot\")),\n        -P_Tot_Tot,\n        -P_Mental_health_cond_Tot\n    ) |>\n    pivot_longer(-c(SA2_CODE_2021),\n        names_to = \"cat\"\n    ) |>\n    separate_wider_regex(cat,\n        patterns = c(cond = \"P_.+\", age = \"(?<=_)[0-9]+_.+$\"),\n        too_few = \"align_start\"\n    ) |>\n    pivot_wider(names_from = cond) |>\n    rename(\n        condition = P_Mental_health_cond_,\n        total = P_Tot_\n    ) |>\n    mutate(\n        prop = condition / total,\n        prop = replace_na(prop, 0)\n    )  |>\n    filter(age == \"15_24\")\n\n\nmh_map <- mh_all |>\n    select(SA2_CODE_2021, SA2_NAME_2021, geom) |>\n    inner_join(mh_dat)  |>\n    as_tibble()  |>\n    st_as_sf()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nJoining with `by = join_by(SA2_CODE_2021)`\n```\n:::\n:::\n\n\nComputing neighborhood network and weights. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nmh_wts <- mh_map |>\n    filter(\n        !st_is_empty(geom) # removing offshore / shipping / no address\n    ) |>\n    mutate(\n        nb = st_contiguity(geom),\n        wt = st_weights(nb, allow_zero = TRUE)\n    )\n```\n:::\n\n\nCalculating spatials lags and Local Morans-I \n\n\n::: {.cell}\n\n```{.r .cell-code}\n mh_moran <- mh_wts |>\n    mutate(\n        prop_lag = st_lag(prop, nb, wt, allow_zero = TRUE),\n        local_moran = local_moran(prop, nb, wt, nsim = 199, zero.policy = TRUE),\n    ) |>\n    tidyr::unnest(local_moran) |>\n    filter(ii != 0)  |> # removes polygons with no neighbours i.e. islands\n    mutate(\n        mean = ifelse(p_folded_sim <= 0.1 & (mean == \"High-High\"), as.character(mean), NA),\n        alpha_channel = ifelse(is.na(mean), 0.4, 1)\n        )  |>\n        mutate(state = case_when(\n            str_extract(SA2_CODE_2021, \"^.\") == 1 ~ \"NSW/ACT\",\n            str_extract(SA2_CODE_2021, \"^.\") == 2 ~ \"VIC\",\n            str_extract(SA2_CODE_2021, \"^.\") == 3 ~ \"QLD\",\n            str_extract(SA2_CODE_2021, \"^.\") == 4 ~ \"SA\",\n            str_extract(SA2_CODE_2021, \"^.\") == 5 ~ \"WA\",\n            str_extract(SA2_CODE_2021, \"^.\") == 6 ~ \"TAS\",\n            str_extract(SA2_CODE_2021, \"^.\") == 7 ~ \"NT\",\n            str_extract(SA2_CODE_2021, \"^.\") == 8 ~ \"NSW/ACT\",\n            str_extract(SA2_CODE_2021, \"^.\") == 9 ~ \"NSW/ACT\",\n        TRUE ~ NA))\n```\n:::\n\n\nvisualise lags vs actuals \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(mh_moran, aes(prop, prop_lag)) +\n    geom_point() +\n    geom_vline(aes(xintercept = mean(prop)), lty = 2) +\n    geom_hline(aes(yintercept = mean(prop_lag)), lty = 2) +\n    geom_smooth(method = \"lm\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nProduce graphic \n\n\n::: {.cell}\n\n```{.r .cell-code}\nstate_data <- mh_moran |>\n    select(state, mean, alpha_channel) |>\n    group_split(state)\n\nmake_plot <- function(data) {\n    p <- ggplot(data, aes(fill = mean)) +\n        geom_sf(aes(alpha = alpha_channel), color = \"grey80\", show.legend = FALSE) +\n       # labs(title = unique(data$state)) +\n       scale_alpha(range = c(0.6, 1)) +\n        scale_fill_manual(values = c(\"#36a7e9\", \"#e1e4e6\"), na.value = \"#e1e4e6\") +\n        theme_void()\n}\n\nstate_plots <- map(state_data[c(1, 3, 5, 6)], make_plot)\n\npw <- (state_plots[[1]] / state_plots[[4]]) | (state_plots[[3]] / state_plots[[2]])\n\nx <- pw +\n    plot_annotation(caption = \"Mental Health **HOTSPOTS** for eastern states.<br>*Source: Based on ABS data.*\") &\n    themes360info::theme_360() +\n    theme(panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank(),\n     axis.text = element_blank())\n\nx \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n\n```{.r .cell-code}\nthemes360info::save_360plot(x, \"out/hot_spot.png\")\n```\n:::\n\n\n::: {.panel-tabset}\n\n# NSW \n\n\n# SA\n\n:::",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}