---
title: Hot Spot Analysis of Mental Health Proportions
subtitle: Utilising mental health prevalance in 15-24 year olds at ABS SA2 level
format:
  360-analysis-html: default
author: Dean Marchiori
date: last-modified
code-fold: true
---

```{r}
library(tidyverse)
library(sf)
library(sfdep)
library(here)
library(rmapshaper)
```

# Data Import 

Download Australia level Geopackage from ABS. For more info see `data/README.md`

Note: This will check if the file exists before downloading as its ~2.1GB zipped.  

```{r}
if (!file.exists(here("data/raw/ABS_Geo_2021.zip"))) {

    download.file(here("https://www.abs.gov.au/census/find-census-data/geopackages/download/Geopackage_2021_G19_AUST_GDA2020.zip"),
        destfile = here("data/raw/ABS_Geo_2021.zip"), method = "curl"
    )

    unzip(here("data/raw/ABS_Geo_2021.zip"), exdir = here("data/raw/ABS_Geo_2021"))
}
```

The health tables are covered in table 19 of the geopackage. This is split across three files, A, B & C.
We only need files B and C for this analysis.  Combining together.  

```{r}
# Extracting SA2 layers 
mh2 <- sf::read_sf(here("data/raw/ABS_Geo_2021/G19B_AUST_GDA2020.gpkg"), layer = "G19B_SA2_2021_AUST")
mh3 <- sf::read_sf(here("data/raw/ABS_Geo_2021/G19C_AUST_GDA2020.gpkg"), layer = "G19C_SA2_2021_AUST")
mh_all <- cbind(mh2, mh3)
```

## Data Processing 

Selecting only the 15-24 year age group, and selecting Persons (not Male/Female).  

```{r}
mh_dat <- mh_all |>
    st_drop_geometry() |>
    as_tibble()  |>
    select(
        SA2_CODE_2021,
        contains(c("P_Mental", "P_Tot")),
        -P_Tot_Tot,
        -P_Mental_health_cond_Tot
    ) |>
    pivot_longer(-c(SA2_CODE_2021),
        names_to = "cat"
    ) |>
    separate_wider_regex(cat,
        patterns = c(cond = "P_.+", age = "(?<=_)[0-9]+_.+$")
    ) |> 
    pivot_wider(names_from = cond) |>
    rename(
        condition = P_Mental_health_cond_,
        total = P_Tot_
    ) |>
    mutate(
        prop = condition / total,
        prop = replace_na(prop, 0)
    )  |>
    filter(age == "15_24")
```

joining with spaital objects 

```{r}
mh_map <- mh_all |>
    select(SA2_CODE_2021, SA2_NAME_2021, geom) |>
    inner_join(mh_dat)  |>
    as_tibble()  |>
    st_as_sf()
```

Computing neighborhood network and weights. 

```{r}
mh_wts <- mh_map |>
    filter(
        !st_is_empty(geom) # removing offshore / shipping / no address
    ) |>
    mutate(
        nb = st_contiguity(geom),
        wt = st_weights(nb, allow_zero = TRUE) # zero weights can occur from islands that have no neighbours with queen contiguity
    )
```

Calculating spatials lags and Local Morans-I 

```{r}
 mh_moran <- mh_wts |>
    mutate(
        prop_lag = st_lag(prop, nb, wt, allow_zero = TRUE),
        local_moran = local_moran(prop, nb, wt, zero.policy = TRUE),
    ) |>
    tidyr::unnest(local_moran)
```

prepare data for export 

```{r}
hot_spot_data <- mh_moran |>
    mutate(
        cluster = ifelse(p_folded_sim <= 0.05, as.character(mean), NA),
        cluster = as.character(fct_recode(cluster,
            `Hot Spot` = "High-High",
            `Isolated Hot Spot` = "High-Low",
            `Cold Spot` = "Low-Low",
            `Isolated Cold Spot` = "Low-High"
        )),
        prop_tooltip = paste0(round(prop * 100, 1), "%"),
        prop_lag_tooltip = paste0(round(prop_lag * 100, 1), "%")
    ) |>
    filter(
        ii != 0, # removes polygons with no neighbours i.e. islands
        !is.na(cluster) # removes polygons with not significant p value for morans I
    ) |> 
    select(SA2_CODE_2021, SA2_NAME_2021, age, condition, total, prop, prop_lag, cluster, prop_tooltip, prop_lag_tooltip) |>
    rmapshaper::ms_simplify(keep_shapes = TRUE, keep = 0.10) 

```


# Data Export  

```{r}
if (file.exists(here("data/final/mental_health_hotspot.geojson"))) {
    message("Please delete file first as it cannot be overwritten")
} else{
sf::st_write(hot_spot_data, here("data/final/mental_health_hotspot.geojson"), append = FALSE, delete_layer = TRUE)
}
```


